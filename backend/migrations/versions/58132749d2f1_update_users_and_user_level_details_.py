"""update users and user_level_details models

Revision ID: 58132749d2f1
Revises: 8a4f6990b796
Create Date: 2025-09-26 06:50:45.658435

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '58132749d2f1'
down_revision: Union[str, Sequence[str], None] = '8a4f6990b796'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_index(op.f('ix_user_level_details_user_id'), table_name='user_level_details')
    op.drop_table('user_level_details')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_level_details',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('exam', postgresql.ENUM('TOEIC', 'IELTS', 'TOEFL', 'PTE', 'DUOLINGO', 'CAMBRIDGE_FCE', 'CAMBRIDGE_CAE', 'CAMBRIDGE_CPE', 'CEFR_A1', 'CEFR_A2', 'CEFR_B1', 'CEFR_B2', 'CEFR_C1', 'CEFR_C2', name='leveltype'), autoincrement=False, nullable=False),
    sa.Column('score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('cefr', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mapped_level', postgresql.ENUM('BEGINER', 'INTERMEDIATE', 'ADVANCED', name='userlevel'), autoincrement=False, nullable=True),
    sa.Column('date_taken', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('user_level_details_pkey'))
    )
    op.create_index(op.f('ix_user_level_details_user_id'), 'user_level_details', ['user_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('role', postgresql.ENUM('ADMIN', 'USER', 'GUEST', name='role'), autoincrement=False, nullable=False),
    sa.Column('avatar', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date_of_birth', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('total_lession_completed', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('total_study_time', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('level', postgresql.ENUM('BEGINER', 'INTERMEDIATE', 'ADVANCED', name='userlevel'), autoincrement=False, nullable=False),
    sa.Column('level_type', postgresql.ENUM('TOEIC', 'IELTS', 'TOEFL', 'PTE', 'DUOLINGO', 'CAMBRIDGE_FCE', 'CAMBRIDGE_CAE', 'CAMBRIDGE_CPE', 'CEFR_A1', 'CEFR_A2', 'CEFR_B1', 'CEFR_B2', 'CEFR_C1', 'CEFR_C2', name='leveltype'), autoincrement=False, nullable=False),
    sa.Column('current_level_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('level_details', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('current_level', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('users_pkey')),
    sa.UniqueConstraint('email', name=op.f('users_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
